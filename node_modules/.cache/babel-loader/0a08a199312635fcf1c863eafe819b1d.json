{"ast":null,"code":"var _jsxFileName = \"/Users/jaquelaurenti/go-barber-web/src/components/Input/index.tsx\";\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\nimport { Container, Error } from './styles'; // Herdando as propriedades de um Input padrão do HTML\n\nconst Input = ({\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const {\n    fieldName,\n    defaultValue,\n    error,\n    registerField\n  } = useField(name);\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isField, setIsField] = useState(false);\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n  const handleInputFocus = useCallback(() => {\n    var _inputRef$current;\n\n    setIsFocused(false);\n\n    if ((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value) {\n      setIsField(true);\n    } else {\n      setIsField(false);\n    }\n  }, []);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/React.createElement(Container, {\n    isErrored: !!error,\n    isField: isField,\n    isFocused: isFocused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    onFocus: handleInputFocus,\n    onBlur: handleInputBlur,\n    defaultValue: defaultValue,\n    ref: inputRef\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  })), error && /*#__PURE__*/React.createElement(Error, {\n    title: error,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(FiAlertCircle, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/jaquelaurenti/go-barber-web/src/components/Input/index.tsx"],"names":["React","useEffect","useRef","useState","useCallback","FiAlertCircle","useField","Container","Error","Input","name","icon","Icon","rest","fieldName","defaultValue","error","registerField","inputRef","isFocused","setIsFocused","isField","setIsField","handleInputBlur","handleInputFocus","current","value","ref","path"],"mappings":";AAAA,OAAOA,KAAP,IAEEC,SAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,WALF,QAMO,OANP;AAQA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,UAAjC,C,CAEA;;AAKA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAI,EAAEC,IAAd;AAAoB,KAAGC;AAAvB,CAAD,KAAmC;AACrE,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAoDX,QAAQ,CAACI,IAAD,CAAlE;AACA,QAAMQ,QAAQ,GAAGhB,MAAM,CAAmB,IAAnB,CAAvB;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMoB,eAAe,GAAGnB,WAAW,CAAC,MAAM;AACxCgB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFkC,EAEhC,EAFgC,CAAnC;AAIA,QAAMI,gBAAgB,GAAGpB,WAAW,CAAC,MAAM;AAAA;;AACzCgB,IAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,6BAAIF,QAAQ,CAACO,OAAb,sDAAI,kBAAkBC,KAAtB,EAA6B;AAC3BJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAPmC,EAOjC,EAPiC,CAApC;AASArB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa,CAAC;AACZP,MAAAA,IAAI,EAAEI,SADM;AAEZa,MAAAA,GAAG,EAAET,QAAQ,CAACO,OAFF;AAGZG,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACd,SAAD,EAAYG,aAAZ,CANM,CAAT;AAQA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAE,CAAC,CAACD,KAAxB;AAA+B,IAAA,OAAO,EAAEK,OAAxC;AAAiD,IAAA,SAAS,EAAEF,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,eAEE;AACE,IAAA,OAAO,EAAEY,gBADX;AAEE,IAAA,MAAM,EAAED,eAFV;AAGE,IAAA,YAAY,EAAER,YAHhB;AAIE,IAAA,GAAG,EAAEG;AAJP,KAKML,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EASGG,KAAK,iBAAK,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAqB,IAAA,SAAS,EAAC,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACT,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,CATb,CADF;AAeD,CA1CD;;AA4CA,eAAeP,KAAf","sourcesContent":["import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\nimport { Container, Error } from './styles';\n\n// Herdando as propriedades de um Input padrão do HTML\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>; // herdando de react-icons para poder utilizar todas as propriedades disponíveis\n}\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isField, setIsField] = useState(false);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(false);\n    if (inputRef.current?.value) {\n      setIsField(true);\n    } else {\n      setIsField(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isErrored={!!error} isField={isField} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n      {error && (<Error title={error} className=\"\">\n        <FiAlertCircle size={20}/>\n      </Error>)}\n    </Container>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}